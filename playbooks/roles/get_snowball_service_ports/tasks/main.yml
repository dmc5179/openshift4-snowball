---

- name: Get non s3 endpoint IP
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id ec2
  register: non_s3_endpoint_info

- name: Set non s3 endpoint IP
  set_fact:
    non_s3_endpoint: "{{ non_s3_endpoint_info.stdout | from_json | community.general.json_query('Endpoints[?Protocol==`https`].Host') }}"

##########################

- name: Get S3 Bucket Endpoint
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id s3-snow
  register: s3_bucket_endpoint_info

- name: Set S3 Bucket Endpoint
  set_fact:
    s3_bucket_endpoint: "{{ s3_bucket_endpoint_info.stdout | from_json | community.general.json_query('Endpoints[?Description==`s3-snow bucket API endpoint`].Host') }}"

####################################################

- name: Get S3 Object Endpoint
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id s3-snow
  register: s3_object_endpoint_info

- name: Set S3 Object Endpoint var
  set_fact:
    s3_object_endpoint: "{{ s3_object_endpoint_info.stdout | from_json | community.general.json_query('Endpoints[?Description==`s3-snow object API endpoint`].Host') }}"

####################################################

- name: Get EC2 Port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id ec2
  register: ec2_port_info

- name: Set EC2 Port var
  set_fact:
    ec2_port: "{{ ec2_port_info.stdout  | from_json | community.general.json_query('Endpoints[?Protocol==`https`].Port') }}"

#########################################################

- name: Get STS Port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id sts
  register: sts_port_info
  when:
    - (sts_enabled | bool)

- name: Set STS Port var
  set_fact:
    sts_port: "{{ sts_port_info.stdout | from_json | community.general.json_query('Endpoints[?Protocol==`https`].Port') }}"
  when:
    - (sts_enabled | bool)

######################################################################

- name: Get IAM port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id iam
  register: iam_port_info
  when:
    - (iam_enabled | bool)

- name: Set IAM port var
  set_fact:
    iam_port: "{{ iam_port_info.stdout | from_json | community.general.json_query(''Endpoints[?Protocol==`https`].Port) }}"
  when:
    - (iam_enabled | bool)

#########################################################################

- name: Get SSM Port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id ssm
  register: ssm_port_info
  when:
    - (ssm_enabled | bool)

- name: Set SSM Port var
  set_fact:
    ssm_port: "{{ ssm_port_info.stdout | from_json | community.general.json_query('Endpoints[?Protocol==`https`].Port') }}"
  when:
    - (ssm_enabled | bool)

####################################################################

- name: Get S3 Bucket Port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id s3-snow
  register: bucket_port_info

- name: Set S3 Bucket Port var
  set_fact:
    s3_bucket_port: "{{ bucket_port_info.stdout | from_json | community.general.json_query('Endpoints[?Description==`s3-snow bucket API endpoint`].Port') }}"

#####################################################################

- name: Get S3 Object Port
  ansible.builtin.command: snowballEdge describe-service {{ sbe_opts }} --service-id s3-snow
  register: object_port_info

- name: Set S3 Object Port var
  set_fact:
    s3_object_port: "{{ object_port_info.stdout | from_json | community.general.json_query('Endpoints[?Description==`s3-snow object API endpoint`].Port') }}"
