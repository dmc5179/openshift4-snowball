---

- name: Add AWS EBS CSI helm repo
  kubernetes.core.helm_repository:
    name: aws-ebs-csi-driver
    repo_url: "https://kubernetes-sigs.github.io/aws-ebs-csi-driver"

- name: Update the repository cache
  kubernetes.core.helm:
    name: foo
    namespace: kube-system
    state: absent
    update_repo_cache: true

- name: Get AWS access key from CLI credentials file
  ansible.builtin.set_fact:
      aws_access_key_id: "{{ lookup( 'ini', 'aws_access_key_id section=snowballEdge file={{ ansible_env.HOME }}/.aws/credentials' ) }}"
      aws_secret_access_key: "{{ lookup( 'ini', 'aws_secret_access_key section=snowballEdge file={{ ansible_env.HOME }}/.aws/credentials' ) }}"

- name: Create AWS Credentials Secret
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    wait: true
    definition:
      apiVersion: v1
      data:
        access_key: "{{ aws_access_key_id | b64encode | trim }}"
        key_id: "{{ aws_secret_access_key | b64encode | trim }}"
      kind: Secret
      metadata:
        name: aws-secret
        namespace: kube-system
      type: Opaque

- name: set ec2 endpoint fact
  set_fact:
    ec2_endpoint: "{{ non_s3_endpoint }}:{{ ec2_port }}"

- name: Create secret with the SBE EC2 endpoint and port
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    wait: true
    definition:
      apiVersion: v1
      data:
        endpoint: "{{ ec2_endpoint | b64encode | trim }}"
      kind: Secret
      metadata:
        name: aws-meta
        namespace: kube-system
      type: Opaque

- name: Slurp Snowball CA
  ansible.builtin.slurp:
    src: '/etc/pki/ca-trust/source/anchors/snow_cert.pem'
  register: slurped_sbe_api_ca_bundle_64

- name: Remove AWS CA temp file
  ansible.builtin.file:
    path: "/tmp/aws-ca-bundle-configmap-prep.yaml"
    state: absent

- name: Create AWS CA Config Map template locally
  template:
    src: aws-ca-bundle-configmap.j2
    dest: "/tmp/aws-ca-bundle-configmap-prep.yaml"
    mode: 0664

- name: Ensure proper spacing of AWS CA Bundle Config Map yaml
  shell: awk 'BEGIN{c=0}  /BEGIN CERTIFICATE/{c=1}  {if (c==1) print "   ",$0}  {if (c==0) print $0}  /END CERTIFICATE/{c=0}' '/tmp/aws-ca-bundle-configmap-prep.yaml'
  register: aws_ca_bundle_spaced

- name: Remove AWS CA temp file
  ansible.builtin.file:
    path: "/tmp/aws-ca-bundle-configmap-prep.yaml"
    state: absent

- name: Create AWS API CA Bundle ConfigMap
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    wait: true
    definition: '{{ aws_ca_bundle_spaced.stdout | from_yaml }}'

- name: Make a copy of the helm chart values file
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/roles/aws_ebs_csi/templates/values.yaml"
    dest: "/tmp/values.yaml"
    force: true
    mode: '0644'

  # Has to be done this way because the values file contains invalid Jinja2 syntax
- name: Update helm chart values file with SBE endpoints
  ansible.builtin.replace:
    path: "/tmp/values.yaml"
    regexp: 'snowball_ec2_endpoint'
    replace: "https://{{ non_s3_endpoint }}:{{ ec2_port }}"

- name: Install AWS EBS CSI Driver
  kubernetes.core.helm:
    name: aws-ebs-csi-driver
    namespace: kube-system
    chart_ref: aws-ebs-csi-driver/aws-ebs-csi-driver
    values_files:
      - "/tmp/values.yaml"

- name: Cleanup temp helm values file
  ansible.builtin.file:
    path: "/tmp/values.yaml"
    state: absent
